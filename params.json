{"name":"Component","tagline":"FoxWeave Component Modules","body":"# FoxWeave Component Modules\r\nThis repository is the home for all **public** FoxWeave Component Modules.\r\n\r\n\"Component Modules\" are how we bundle Connectors and other components that extend the core functionality of\r\nFoxWeave to \"connect\" to [Cloud APIs/Apps/DBs or On-Premise Apps/DBs][1] for the purpose of\r\nsynchronizing or migrating data.  You can use the modules in this repository as references for creating\r\nnew modules to connect to other [Cloud APIs/Apps/DBs or On-Premise Apps/DBs][1].  Alternatively, make\r\nenhancements/fixes to existing modules.\r\n\r\nIf you create/enhance/fix a connector, please let us know by submitting a pull request on the github repository.\r\n\r\n## Creating/Updating a Component Modules\r\nThe first thing you'll need to do is fork and clone this repository.  If you want to create a new module, the easiest\r\nthing to do is copy one of the existing modules and work from that.  If it is a new module, you need to add\r\nit in the *settings.gradle* file in the root of the repository.\r\n\r\nPlease check out the [Component Developer Guide][5] for details on developing a Component Module.\r\n\r\n## Building and Uploading Component Modules\r\nWe assume you've forked and cloned this repository and added/enhanced a module (as outlined in the previous section) and would now like to\r\nupload it to your account on FoxWeave.\r\n\r\n### Step 1\r\nWe use [Gradle][3] v1.4 as our build tool.  You'll need to download and install Gradle (as well as Java v1.6).\r\n\r\nTo build/assemble the module, cd into the module directory and execute the following command:\r\n\r\n    $ gradle clean distZip\r\n\r\nAfter this command completes, the module will have a distribution *.zip* file located in the\r\n*target/distributions* folder e.g. if your component is called \"myfunkyapp\", the distribution *.zip* file\r\nwould be *target/distributions/myfunkyapp.zip*.\r\n\r\n### Step 2\r\nYou now need to upload the assembled distribution *.zip* file to your account on FoxWeave.  This is very easy.\r\nYou just POST it to “https://dev.foxweave.io/component“, including your apiKey as a query parameter.\r\n\r\nThe following is an example using curl:\r\n\r\n    curl -X POST -T target/distributions/myfunkyapp.zip -H \"Content-Type: application/zip\" https://dev.foxweave.io/component/myfunkyapp?apiKey=XXXXXX\r\n\r\nAs you've probably guessed from above, the target URL is formatted as follows:\r\n\r\n    https://dev.foxweave.io/component/{module-name}?apiKey={account-api-key}\r\n\r\nYour account API key can be found in your profile after logging into your account on FoxWeave.  Just follow \"Settings->API\" from the top menu bar.\r\n\r\nNote that when you upload a module to FoxWeave, it will:\r\n\r\n1. Only be visible/usable from your account i.e. other FoxWeave accounts cannot use any of the components in your module.  You will need to [get in contact with us][4] if you'd like to make the module public.\r\n2. Only be runnable on a [PaaS or On-Premise][1].  This is obviously for security reasons.\r\n\r\n### Updating Individual Resources\r\nYou don't want the trouble of building and uploading a full module distribution *.zip* file every time you make a change while you are developing a module.\r\nTo avoid this, you can simply update and then PUT individual resources.  For example, to update and PUT local changes to the *foxweave-components.json*\r\nmodule descriptor file:\r\n\r\n    curl -X PUT -T src/main/resources/foxweave-components.json -H \"Content-Type: application/json\" https://dev.foxweave.io/component/myfunkyapp/foxweave-components.json?apiKey=XXXXXX\r\n\r\n[1]: http://www.foxweave.com/integration-runtime-options/ \"Integration Task Runtime Options\"\r\n[2]: http://www.foxweave.com/synchronization-vs-migration/ \"Synchronization Vs Migration\"\r\n[3]: http://www.gradle.org/\r\n[4]: mailto:support@foxweave.com\r\n[5]: http://www.foxweave.com/component-developer-guide/","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}